Sample processor for Instagram posts:

# URI:
# https://api.instagram.com/v1/users/{account_id}/media/recent/
# ?access_token={api_key}&count={items}
#
# {items} is max_results field value


from time import sleep
from s13core.content_management.models import Article

target_article = Article.objects.get_section('SectionSlug')

for post in reversed(self.response_json['data']):
    post_id = post['link'].split('/p/')[-1][:-1]
    title = 'Instagram: {}'.format(post_id)
    description = ' '.join([
        x for x in post['caption']['text'].replace('\n', ' ').split(' ')
        if not x.startswith('#')
    ])
    keywords = ', '.join(['instagram'] + post['tags'])
    image_url = post['images']['standard_resolution']['url']

    # Save the image as a FileAsset so we can attach it to an the Article.
    file_asset = self.save_as_fileasset(
        post_id, image_url, title, description, keywords)

    if file_asset:
        target_article.media.add(file_asset)

    # Because we're nice.
    sleep(5)


-------------


YouTube Videos:

# URI (must know the Channel ID before hand):
# https://www.googleapis.com/youtube/v3/search?
# part=snippet&maxResults={items}&
# order=date&channelId={account_id}&key={api_key}


from time import sleep
from s13core.content_management.models import Article

target_article = Article.objects.get_section('SectionSlug')

for post in reversed(self.response_json['items']):
    post_id = post["id"]["videoId"]

    # post_id can also be used for:
    # https://www.youtube.com/watch?v=<post_id>

    title = post['snippet']['title']
    description = post['snippet']['description']
    image_url = post['snippet']['thumbnails']['high']['url']

    # Save the image as a FileAsset so we can attach it to an the Article.
    file_asset = self.save_as_fileasset(
        post_id, image_url, title, description)

    if file_asset:
        target_article.media.add(file_asset)

    # Because we're nice.
    sleep(5)

-------------
